
%Generated by PrologEncoder using Diagram 

% nodes
node( 'node_0' ) .
node( 'node_1' ) .
node( 'node_2' ) .
node( 'node_3' ) .
node( 'node_4' ) .
node( 'node_5' ) .
node( 'node_6' ) .
node( 'node_7' ) .
node( 'node_8' ) .
node( 'node_9' ) .
node( 'node_10' ) .
 
% edges
edge( 'edge_0' , 'node_1' , 'node_2' ) .
edge( 'edge_1' , 'node_0' , 'node_4' ) .
edge( 'edge_2' , 'node_4' , 'node_5' ) .
edge( 'edge_3' , 'node_3' , 'node_5' ) .
edge( 'edge_4' , 'node_3' , 'node_4' ) .
edge( 'edge_5' , 'node_9' , 'node_4' ) .
edge( 'edge_6' , 'node_10' , 'node_3' ) .
edge( 'edge_7' , 'node_8' , 'node_10' ) .
edge( 'edge_8' , 'node_0' , 'node_3' ) .

% property key = label
property( 'node_0' , 'label' , ' Diagram  ' ) .
property( 'node_1' , 'label' , 'package dgmr.diagram' ) .
property( 'node_2' , 'label' , '' ) .
property( 'node_3' , 'label' , 'Edge' ) .
property( 'node_4' , 'label' , 'Node' ) .
property( 'node_5' , 'label' , 'DiagramObject' ) .
property( 'node_6' , 'label' , '2' ) .
property( 'node_7' , 'label' , '1' ) .
property( 'node_8' , 'label' , 'ArrowEdge' ) .
property( 'node_9' , 'label' , 'DataNode' ) .
property( 'node_10' , 'label' , '' ) .
property( 'edge_0' , 'label' , '' ) .
property( 'edge_1' , 'label' , '         *' ) .
property( 'edge_2' , 'label' , '' ) .
property( 'edge_3' , 'label' , '' ) .
property( 'edge_4' , 'label' , '' ) .
property( 'edge_5' , 'label' , '' ) .
property( 'edge_6' , 'label' , '' ) .
property( 'edge_7' , 'label' , '' ) .
property( 'edge_8' , 'label' , '     *' ) .

% property key = type value = Java class designator
property( 'node_0' , 'type' , 'dgmr.diagram.DataNode' ) .
property( 'node_1' , 'type' , 'dgmr.diagram.FolderNode' ) .
property( 'node_2' , 'type' , 'dgmr.diagram.ConnectorNode' ) .
property( 'node_3' , 'type' , 'dgmr.diagram.DataNode' ) .
property( 'node_4' , 'type' , 'dgmr.diagram.DataNode' ) .
property( 'node_5' , 'type' , 'dgmr.diagram.DataNode' ) .
property( 'node_6' , 'type' , 'dgmr.diagram.LabelNode' ) .
property( 'node_7' , 'type' , 'dgmr.diagram.LabelNode' ) .
property( 'node_8' , 'type' , 'dgmr.diagram.RectNode' ) .
property( 'node_9' , 'type' , 'dgmr.diagram.RectNode' ) .
property( 'node_10' , 'type' , 'dgmr.diagram.ConnectorNode' ) .
property( 'edge_0' , 'type' , 'BoundaryEdge' ) .
property( 'edge_1' , 'type' , 'ClosedDiamondEdge' ) .
property( 'edge_2' , 'type' , 'dgmr.diagram.ArrowEdge' ) .
property( 'edge_3' , 'type' , 'dgmr.diagram.ArrowEdge' ) .
property( 'edge_4' , 'type' , 'dgmr.diagram.ArrowEdge' ) .
property( 'edge_5' , 'type' , 'dgmr.diagram.CubicEdge' ) .
property( 'edge_6' , 'type' , 'dgmr.diagram.ArrowEdge' ) .
property( 'edge_7' , 'type' , 'dgmr.diagram.ArrowEdge' ) .
property( 'edge_8' , 'type' , 'ClosedDiamondEdge' ) .

% property key = color value = [red,green,blue]
property( 'node_0' , 'color' , [255,255,204] ) .
property( 'node_1' , 'color' , [255,255,255] ) .
property( 'node_2' , 'color' , [128,128,128] ) .
property( 'node_3' , 'color' , [204,204,204] ) .
property( 'node_4' , 'color' , [204,204,204] ) .
property( 'node_5' , 'color' , [204,204,204] ) .
property( 'node_6' , 'color' , [255,255,255] ) .
property( 'node_7' , 'color' , [255,255,255] ) .
property( 'node_8' , 'color' , [204,255,204] ) .
property( 'node_9' , 'color' , [204,255,204] ) .
property( 'node_10' , 'color' , [128,128,128] ) .
property( 'edge_0' , 'color' , [64,64,64] ) .
property( 'edge_1' , 'color' , [0,0,0] ) .
property( 'edge_2' , 'color' , [0,0,0] ) .
property( 'edge_3' , 'color' , [0,0,0] ) .
property( 'edge_4' , 'color' , [0,0,0] ) .
property( 'edge_5' , 'color' , [0,0,0] ) .
property( 'edge_6' , 'color' , [0,0,0] ) .
property( 'edge_7' , 'color' , [0,0,0] ) .
property( 'edge_8' , 'color' , [0,0,0] ) .

% property key = position value = [x,y]
property( 'node_0' , 'position' , [38,55] ) .
property( 'node_1' , 'position' , [23,18] ) .
property( 'node_2' , 'position' , [609,438] ) .
property( 'node_3' , 'position' , [40,260] ) .
property( 'node_4' , 'position' , [354,60] ) .
property( 'node_5' , 'position' , [369,255] ) .
property( 'node_6' , 'position' , [337,189] ) .
property( 'node_7' , 'position' , [240,244] ) .
property( 'node_8' , 'position' , [276,394] ) .
property( 'node_9' , 'position' , [492,395] ) .
property( 'node_10' , 'position' , [158,403] ) .

% property key = dimension value = [width,height]
property( 'node_0' , 'dimension' , [246,137] ) .
property( 'node_1' , 'dimension' , [132,22] ) .
property( 'node_2' , 'dimension' , [4,4] ) .
property( 'node_3' , 'dimension' , [240,104] ) .
property( 'node_4' , 'dimension' , [222,126] ) .
property( 'node_5' , 'dimension' , [192,115] ) .
property( 'node_6' , 'dimension' , [15,8] ) .
property( 'node_7' , 'dimension' , [15,8] ) .
property( 'node_8' , 'dimension' , [58,26] ) .
property( 'node_9' , 'dimension' , [54,26] ) .
property( 'node_10' , 'dimension' , [4,4] ) .

% property key = data
property( 'node_0' , 'data' ,["nodes ","edges"," ","void addNode(Node) ","void addEdger(Edge) ","void deleteNode(Node)","void deleteEdge(Edge)","void draw(Graphics) ","Node getSelectedNode(int,int,Graphics) ","Edge getSelectedEdge(int,int,Graphics) "] ) .
property( 'node_1' , 'data' ,[] ) .
property( 'node_2' , 'data' ,[] ) .
property( 'node_3' , 'data' ,["Node from ","Node to "," ","Edge(Node,Node) "," ","abstract Point getFromPoint(Graphics) ","abstract Point getToPoint(Graphics)"] ) .
property( 'node_4' , 'data' ,["int x ","int y "," ","Node(String)"," ","abstract int getWidth(Graphics) ","abstract int getHeight(Graphics) ","boolean contains(int,int,Graphics) ","Point getAnchor(int,int,Graphics) "] ) .
property( 'node_5' , 'data' ,["String label","String data ","Color color","Font font","Color fontColor "," ","abstract void draw(Graphics)  "," "] ) .
property( 'node_6' , 'data' ,[] ) .
property( 'node_7' , 'data' ,[] ) .
property( 'node_8' , 'data' ,[] ) .
property( 'node_9' , 'data' ,[] ) .
property( 'node_10' , 'data' ,[] ) .
property( 'edge_0' , 'data' ,[] ) .
property( 'edge_1' , 'data' ,[] ) .
property( 'edge_2' , 'data' ,[] ) .
property( 'edge_3' , 'data' ,[] ) .
property( 'edge_4' , 'data' ,[] ) .
property( 'edge_5' , 'data' ,[] ) .
property( 'edge_6' , 'data' ,[] ) .
property( 'edge_7' , 'data' ,[] ) .
property( 'edge_8' , 'data' ,[] ) .

% property key = tip
property( 'edge_0' , 'tip' , 'no_tip' ) .
property( 'edge_1' , 'tip' , 'no_tip' ) .
property( 'edge_2' , 'tip' , 'closed_tip' ) .
property( 'edge_3' , 'tip' , 'closed_tip' ) .
property( 'edge_4' , 'tip' , 'no_tip' ) .
property( 'edge_5' , 'tip' , 'closed_tip' ) .
property( 'edge_6' , 'tip' , 'closed_tip' ) .
property( 'edge_7' , 'tip' , 'no_tip' ) .
property( 'edge_8' , 'tip' , 'no_tip' ) .

% property key = dashed
property( 'edge_0' , 'dashed' , 'true' ) .
property( 'edge_1' , 'dashed' , 'false' ) .
property( 'edge_2' , 'dashed' , 'false' ) .
property( 'edge_3' , 'dashed' , 'false' ) .
property( 'edge_4' , 'dashed' , 'false' ) .
property( 'edge_5' , 'dashed' , 'false' ) .
property( 'edge_6' , 'dashed' , 'false' ) .
property( 'edge_7' , 'dashed' , 'false' ) .
property( 'edge_8' , 'dashed' , 'false' ) .
