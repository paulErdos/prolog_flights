head	358.6;
access;
symbols;
locks;
comment	@# @;


358.6
date	2005.11.15.02.44.54;	author -;	state -;
branches;
next	358.5;

358.5
date	2005.10.29.01.19.36;	author -;	state -;
branches;
next	358.4;

358.4
date	2005.10.29.01.18.26;	author -;	state -;
branches;
next	358.3;

358.3
date	2005.10.29.01.17.53;	author -;	state -;
branches;
next	358.2;

358.2
date	2005.10.29.01.17.32;	author -;	state -;
branches;
next	358.1;

358.1
date	2005.10.29.01.16.35;	author -;	state -;
branches;
next	351.2;

351.2
date	2005.02.24.23.24.12;	author -;	state -;
branches;
next	351.1;

351.1
date	2005.02.23.19.29.13;	author -;	state -;
branches;
next	;


desc
@@


358.6
log
@-
@
text
@#!/usr/local/bin/perl -w
use strict;
use warnings;
my $RCSID = '$Id: argv.perl,v 358.5 2005-10-28 18:19:36-07 - - $';
#
# NAME
#    $0 - print out command line arguments and other things
#
# SYNOPSIS
#    $0 [args]
#
# DESCRIPTION
#    Prints out command line arguments in debug mode, along
#    with the RCSID, date and time.
#

use POSIX qw(strftime);

print "\$0 = $0\n";
$0 =~ s|^(.*/)?([^/]+)/*$|$2|;
print "\$0 = $0\n";
print "\$RCSID = $RCSID\n";

printf "\$^T = $^T = %s\n",
       strftime "%Y-%m-%d %a %H:%M:%S %Z", localtime $^T;
map {print "\$ARGV[$_] = $ARGV[$_]\n"} 0..$#ARGV;

@


358.5
log
@-
@
text
@d4 1
a4 1
my $RCSID = '$Id: argv.perl,v 358.4 2005-10-28 18:18:26-07 - - $';
d7 1
a7 1
#    pecho - print out command line arguments and other things
d10 1
a10 1
#    pecho [args]
@


358.4
log
@-
@
text
@d4 1
a4 1
my $RCSID = '$Id: argv.perl,v 358.3 2005-10-28 18:17:53-07 - - $';
d26 1
a26 1
map{ print "\$ARGV[$_] = $ARGV[$_]\n" } 0 .. $#ARGV;
@


358.3
log
@-
@
text
@d4 1
a4 1
my $RCSID = '$Id: argv.perl,v 358.2 2005-10-28 18:17:32-07 - - $';
d22 1
d25 1
a25 1
      strftime "%Y-%m-%d %a %H:%M:%S %Z", localtime $^T;
@


358.2
log
@-
@
text
@d4 1
a4 1
# $Id: argv.perl,v 358.1 2005-10-28 18:16:35-07 - - $
@


358.1
log
@-
@
text
@d4 1
a4 1
# $Id: argv.perl,v 351.2 2005-02-24 15:24:12-08 - - $
d17 1
a17 1
use POSIX qw( strftime );
d19 1
a19 1
print "\$0 = ($0)\n";
d21 1
a21 1
print "\$0 = ($0)\n";
d23 1
a23 1
printf "\$^T = ($^T) = %s\n",
d25 1
a25 1
map{ print "\$ARGV[$_] = ($ARGV[$_])\n" } 0 .. $#ARGV;
@


351.2
log
@-
@
text
@d4 1
a4 1
# $Id: argv.perl,v 351.1 2005-02-23 11:29:13-08 - - $
d19 1
a19 1
print "\$0 = ``$0''\n";
d21 1
a21 1
print "\$0 = ``$0''\n";
d23 1
a23 1
printf "\$^T = ``$^T'' = %s\n",
d25 1
a25 1
map{ print "\$ARGV[$_] = ``$ARGV[$_]''\n" } 0 .. $#ARGV;
@


351.1
log
@-
@
text
@d2 3
a4 1
# $Id: argv.perl,v 348.6 2004-11-16 19:58:45-08 - - $
@
